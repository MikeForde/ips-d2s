(this.webpackJsonpclient=this.webpackJsonpclient||[]).push([[0],{197:function(e,t,a){},224:function(e,t,a){e.exports=a(356)},229:function(e,t,a){},254:function(e,t){},256:function(e,t){},288:function(e,t){},290:function(e,t){},291:function(e,t){},296:function(e,t){},298:function(e,t){},318:function(e,t){},334:function(e,t){},337:function(e,t){},352:function(e,t,a){},355:function(e,t,a){},356:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(27),o=a.n(r),i=(a(229),a(23)),c=a(11),m=(a(59),a(365)),s=a(205),d=a(367),u=(a(230),a(19)),E=a.n(u),p=a(370),g=a(146);a(197);const h=e=>{if(!e)return"";const[t,a]=e.split("T"),n=a.split(".")[0];return"00:00:00"===n?t:`${t} ${n}`};function v(e){let{add:t}=e;const[a,r]=Object(n.useState)(!1),[o,i]=Object(n.useState)({packageUUID:Object(g.v4)(),timeStamp:new Date,patient:{name:"",given:"",dob:"",gender:"",nationality:"",practitioner:"",organization:""},medication:[{name:"",date:"",dosage:""}],allergies:[{name:"",criticality:"",date:""}],conditions:[{name:"",date:""}],observations:[{name:"",date:"",value:""}],immunizations:[{name:"",system:"",date:""}]}),[c,d]=Object(n.useState)(!1),u=e=>{const{name:t,value:a}=e.target;i({...o,patient:{...o.patient,[t]:a}})},E=(e,t)=>{const{name:a,value:n}=t.target,l=[...o.medication];l[e][a]=n,i({...o,medication:l})},v=(e,t)=>{const{name:a,value:n}=t.target,l=[...o.allergies];l[e][a]=n,i({...o,allergies:l})},b=(e,t)=>{const{name:a,value:n}=t.target,l=[...o.conditions];l[e][a]=n,i({...o,conditions:l})},f=(e,t)=>{const{name:a,value:n}=t.target,l=[...o.observations];l[e][a]=n,i({...o,observations:l})},y=(e,t)=>{const{name:a,value:n}=t.target,l=[...o.immunizations];l[e][a]=n,i({...o,immunizations:l})};return l.a.createElement("div",null,l.a.createElement(s.a,{className:"mb-3",onClick:()=>r(!a)},a?"Hide Form":"Manually Add New IPS Entry"),a&&l.a.createElement(m.a,{onSubmit:e=>{if(e.preventDefault(),!o.patient.name||!o.patient.given||!o.patient.dob)return d(!0),void setTimeout(()=>{d(!1)},3e3);o.patient.gender||(o.patient.gender="Unknown"),o.patient.nation||(o.patient.nation="UK"),o.patient.practitioner||(o.patient.practitioner="Dr No"),o.patient.organization||(o.patient.organization="UK DMS"),o.packageUUID&&(t(o),i({packageUUID:Object(g.v4)(),timeStamp:new Date,patient:{name:"",given:"",dob:"",gender:"",nation:"",practitioner:"",organization:""},medication:[{name:"",date:"",dosage:""}],allergies:[{name:"",criticality:"",date:""}],conditions:[{name:"",date:""}],observations:[{name:"",date:"",value:""}],immunizations:[{name:"",system:"",date:""}]}))}},l.a.createElement(m.a.Group,null,l.a.createElement(m.a.Label,null,l.a.createElement("h3",null,"Add IPS Entry")),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},l.a.createElement("b",null,"Package UUID")),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",readOnly:!0,value:o.packageUUID})))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Time Stamp"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",readOnly:!0,value:o.timeStamp}))),l.a.createElement(m.a.Group,null,l.a.createElement(m.a.Label,null,l.a.createElement("b",null,"Patient Information")),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Name"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"name",value:o.patient.name,onChange:u,placeholder:"Patient Name"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Given Name"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"given",value:o.patient.given,onChange:u,placeholder:"Given Name"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Date of Birth"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"date",name:"dob",value:o.patient.dob,onChange:u}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Gender"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{as:"select",name:"gender",value:o.patient.gender,onChange:u},l.a.createElement("option",{value:""},"Select Gender"),l.a.createElement("option",{value:"Male"},"Male"),l.a.createElement("option",{value:"Female"},"Female"),l.a.createElement("option",{value:"Other"},"Other"),l.a.createElement("option",{value:"Unknown"},"Unknown")))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Country"),l.a.createElement("div",{className:"col-sm-4"},l.a.createElement(m.a.Control,{type:"text",name:"nation",defaultValue:"UK",value:o.patient.nation,onChange:u,placeholder:"Country - default UK"})),l.a.createElement(m.a.Label,{className:"col-sm-2"},"Practitioner"),l.a.createElement("div",{className:"col-sm-4"},l.a.createElement(m.a.Control,{type:"text",name:"practitioner",value:o.patient.practitioner,onChange:u,placeholder:"Practitioner - default Dr No"})),l.a.createElement(m.a.Label,{className:"col-sm-2"},"Organization"),l.a.createElement("div",{className:"col-sm-4"},l.a.createElement(m.a.Control,{type:"text",name:"organization",value:o.patient.organization,onChange:u,placeholder:"Organization - default UK DMS"})))),l.a.createElement(s.a,{className:"mb-3 minor-button",onClick:()=>{i({...o,medication:[...o.medication,{name:"",date:"",dosage:""}]})}},"Add Medication"),o.medication.map((e,t)=>l.a.createElement("div",{key:t},l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Medication"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"name",value:e.name,onChange:e=>E(t,e),placeholder:"Medication Name"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Date"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"datetime-local",name:"date",value:h(e.date),onChange:e=>E(t,e),placeholder:"Date"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Dosage"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"dosage",defaultValue:"Stat",value:e.dosage,onChange:e=>E(t,e),placeholder:"Dosage"}))))),l.a.createElement(s.a,{className:"mb-3 minor-button",onClick:()=>{i({...o,allergies:[...o.allergies,{name:"",criticality:"",date:""}]})}},"Add Allergy"),o.allergies.map((e,t)=>l.a.createElement("div",{key:t},l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Allergy"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"name",value:e.name,onChange:e=>v(t,e),placeholder:"Allergy Name"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Criticality"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{as:"select",name:"criticality",value:e.criticality,onChange:e=>v(t,e),placeholder:"Criticality"},l.a.createElement("option",{value:""},"Select Criticality"),l.a.createElement("option",{value:"high"},"High"),l.a.createElement("option",{value:"medium"},"Medium"),l.a.createElement("option",{value:"low"},"Low")))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Date"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"date",name:"date",value:e.date,onChange:e=>v(t,e),placeholder:"Date"}))))),l.a.createElement(s.a,{className:"mb-3 minor-button",onClick:()=>{i({...o,conditions:[...o.conditions,{name:"",date:""}]})}},"Add Condition"),o.conditions.map((e,t)=>l.a.createElement("div",{key:t},l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Condition"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"name",value:e.name,onChange:e=>b(t,e),placeholder:"Condition/Problem Name"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Date"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"date",name:"date",value:e.date,onChange:e=>b(t,e),placeholder:"Date"}))))),l.a.createElement(s.a,{className:"mb-3 minor-button",onClick:()=>{i({...o,observations:[...o.observations,{name:"",date:"",value:""}]})}},"Add Observation"),o.observations.map((e,t)=>l.a.createElement("div",{key:t},l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Observation"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{as:"select",name:"name",value:e.name,onChange:e=>f(t,e)},l.a.createElement("option",{value:""},"Select an observation or enter custom"),l.a.createElement("option",{value:"Blood Pressure"},"Blood Pressure"),l.a.createElement("option",{value:"Pulse"},"Pulse"),l.a.createElement("option",{value:"Resp Rate"},"Resp Rate"),l.a.createElement("option",{value:"Temperature"},"Temperature"),l.a.createElement("option",{value:"Oxygen Sats"},"Oxygen Sats"),l.a.createElement("option",{value:"AVPU"},"AVPU")),l.a.createElement(m.a.Control,{type:"text",name:"name",value:e.name,onChange:e=>f(t,e),placeholder:"Custom Observation",className:"mt-2"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Date"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"datetime-local",name:"date",value:h(e.date),onChange:e=>f(t,e),placeholder:"Date"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Value"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"value",value:e.value,onChange:e=>f(t,e),placeholder:"Value"}))))),l.a.createElement(s.a,{className:"mb-3 minor-button",onClick:()=>{i({...o,immunizations:[...o.immunizations,{name:"",system:"",date:""}]})}},"Add Immunization"),o.immunizations.map((e,t)=>l.a.createElement("div",{key:t},l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Immunization"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"name",value:e.name,onChange:e=>y(t,e),placeholder:"Immunization Name or Code"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"System"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"text",name:"system",value:e.system,onChange:e=>y(t,e),placeholder:"Coding System (e.g., LOINC, SNOMED) or url"}))),l.a.createElement(m.a.Group,{className:"row"},l.a.createElement(m.a.Label,{className:"col-sm-2"},"Date"),l.a.createElement("div",{className:"col-sm-10"},l.a.createElement(m.a.Control,{type:"datetime-local",name:"date",value:h(e.date),onChange:e=>y(t,e),placeholder:"Date"}))))),l.a.createElement(s.a,{className:"submit",variant:"primary",type:"submit"},"Submit IPS Data"),l.a.createElement(p.a,{show:c,onClose:()=>d(!1),bg:"danger",className:"fixed-bottom m-3"},l.a.createElement(p.a.Body,null,"Please fill in all required fields."))),l.a.createElement("br",null))}var b=a(222),f=a(368),y=a(369),S=a(360),P=a(206),I=a(22),N=a(21);const C=Object(n.createContext)(),w=e=>{let{children:t}=e;const[a,r]=Object(n.useState)([]),[o,i]=Object(n.useState)(null);return l.a.createElement(C.Provider,{value:{selectedPatients:a,setSelectedPatients:r,selectedPatient:o,setSelectedPatient:i}},t)},O=Object(n.createContext)(),D=()=>Object(n.useContext)(O),A=e=>{let{children:t}=e;const[a,r]=Object(n.useState)(!1);return l.a.createElement(O.Provider,{value:{isLoading:a,startLoading:()=>r(!0),stopLoading:()=>r(!1)}},t)};var T=a(97);const B=e=>{if(!e)return"";const[t,a]=e.split("T");return`${t} ${a.split(".")[0]}`},k=e=>{if(!e)return"";const[t,a]=e.split("T");return`${t} ${a.split(".")[0]}`};function L(e){let{ips:t,remove:a,update:r}=e;const[o,c]=Object(n.useState)(!1),[d,u]=Object(n.useState)(!1),[p,g]=Object(n.useState)(!1),[h,v]=Object(n.useState)({...t}),{setSelectedPatient:w}=Object(n.useContext)(C),{startLoading:O,stopLoading:A}=D(),L=()=>u(!1),R=()=>{w([t]),O()},x=e=>{const{name:t,value:a}=e.target;v(e=>({...e,patient:{...e.patient,[t]:a}}))},_=e=>{v(t=>({...t,[e]:[...t[e],{name:"",date:"",dosage:"",criticality:"",value:"",system:""}]}))},M=(e,t)=>{v(a=>({...a,[e]:a[e].filter((e,a)=>a!==t)}))},G=(e,t,a)=>{const{name:n,value:l}=a.target;v(a=>({...a,[e]:a[e].map((e,a)=>a===t?{...e,[n]:l}:e)}))},U=e=>l.a.createElement(b.a,{id:"tooltip-"+e},e);return l.a.createElement("div",{className:"ips"},l.a.createElement("div",null,l.a.createElement("h5",null,"IPS UUID: ",t.packageUUID),!o&&l.a.createElement(l.a.Fragment,null,l.a.createElement("p",null,"Patient: ",t.patient.given," ",t.patient.name),l.a.createElement(s.a,{variant:"link",onClick:()=>c(!0)},"Show More")),o&&l.a.createElement(l.a.Fragment,null,l.a.createElement("h5",null,"Timestamp: ",k(t.timeStamp)),l.a.createElement("h4",null,"Patient Details:"),l.a.createElement("p",null,"Name: ",t.patient.name),l.a.createElement("p",null,"Given Name: ",t.patient.given),l.a.createElement("p",null,"DOB: ",t.patient.dob.split("T")[0]),l.a.createElement("p",null,"Gender: ",t.patient.gender),l.a.createElement("p",null,"Country: ",t.patient.nation),l.a.createElement("p",null,"Practitioner: ",t.patient.practitioner),l.a.createElement("p",null,"Organization: ",t.patient.organization),l.a.createElement("h4",null,"Medications:"),l.a.createElement("ul",null,t.medication.map((e,t)=>l.a.createElement("li",{key:t},l.a.createElement("small",null,"M:")," ",e.name," - Date: ",k(e.date)," - Dosage: ",e.dosage))),l.a.createElement("h4",null,"Allergies:"),l.a.createElement("ul",null,t.allergies.map((e,t)=>l.a.createElement("li",{key:t},l.a.createElement("small",null,"A:")," ",e.name," - Criticality: ",e.criticality," - Date: ",k(e.date)))),l.a.createElement("h4",null,"Conditions:"),l.a.createElement("ul",null,t.conditions.map((e,t)=>l.a.createElement("li",{key:t},l.a.createElement("small",null,"C:")," ",e.name," - Date: ",k(e.date)))),l.a.createElement("h4",null,"Observations:"),l.a.createElement("ul",null,t.observations.map((e,t)=>l.a.createElement("li",{key:t},l.a.createElement("small",null,"O:")," ",e.name," - Date: ",k(e.date)," - Value: ",e.value))),l.a.createElement("h4",null,"Immunizations:"),l.a.createElement("ul",null,t.immunizations.map((e,t)=>l.a.createElement("li",{key:t},l.a.createElement("small",null,"I:")," ",e.name," - Date: ",k(e.date)," - System: ",e.system))),l.a.createElement(s.a,{variant:"link",onClick:()=>c(!1)},"Show Less"))),l.a.createElement("div",null,l.a.createElement(f.a,{placement:"top",overlay:U("View IPS API Page")},l.a.createElement(i.b,{to:"/api"},l.a.createElement(s.a,{variant:"outline-secondary",className:"qr-button custom-button",onClick:R},l.a.createElement(N.a,{icon:I.g})))),l.a.createElement(f.a,{placement:"top",overlay:U("View QR Code Page")},l.a.createElement(i.b,{to:"/qr"},l.a.createElement(s.a,{variant:"outline-secondary",className:"qr-button custom-button",onClick:R},l.a.createElement(N.a,{icon:I.h})))),l.a.createElement(f.a,{placement:"top",overlay:U("View BEER Garden Page")},l.a.createElement(i.b,{to:"/beergarden"},l.a.createElement(s.a,{variant:"outline-secondary",className:"qr-button custom-button",onClick:R},l.a.createElement(N.a,{icon:I.a})))),l.a.createElement(f.a,{placement:"top",overlay:U("View VitalsIQ POST Page")},l.a.createElement(i.b,{to:"/offroadpost"},l.a.createElement(s.a,{variant:"outline-secondary",className:"qr-button custom-button",onClick:R},l.a.createElement(N.a,{icon:I.d})))),l.a.createElement(f.a,{placement:"top",overlay:U("View NLD POST Page")},l.a.createElement(i.b,{to:"/pushipsnld"},l.a.createElement(s.a,{variant:"outline-secondary",className:"qr-button custom-button",onClick:R},l.a.createElement(N.a,{icon:I.c})))),l.a.createElement(f.a,{placement:"top",overlay:U("Generate PDF")},l.a.createElement(s.a,{variant:"outline-secondary",className:"qr-button custom-button",onClick:()=>{(async e=>{const t=await T.PDFDocument.create(),a=t.addPage([595.28,841.89]),{width:n,height:l}=a.getSize(),r=await t.embedFont(T.StandardFonts.Helvetica),o=await t.embedFont(T.StandardFonts.HelveticaBold);let i=l-50;const c=(e,t,l,r,o)=>{const i=e.split("\n");return i.forEach((e,i)=>{a.drawText(e,{x:r,y:o-i*l*1.2,size:l,font:t,color:Object(T.rgb)(0,0,0),maxWidth:n-100,lineHeight:1.2*l})}),o-i.length*l*1.2};c(`Patient Report: ${e.patient.given} ${e.patient.name}`,o,12,50,i),i-=20;["Name: "+e.patient.name,"Given Name: "+e.patient.given,"DOB: "+e.patient.dob.split("T")[0],"Gender: "+e.patient.gender,"Country: "+e.patient.nation,"Practitioner: "+e.patient.practitioner,"Organization: "+e.patient.organization].forEach(e=>{i<50&&(i=l-50,t.addPage()),c(e,r,10,50,i),i-=15}),i-=5;[{title:"Medications",items:e.medication,formatItem:(e,t)=>`${t+1}. ${e.name} - Date: ${B(e.date)} - Dosage: ${e.dosage}`},{title:"Allergies",items:e.allergies,formatItem:(e,t)=>`${t+1}. ${e.name} - Criticality: ${e.criticality} - Date: ${e.date.split("T")[0]}`},{title:"Conditions",items:e.conditions,formatItem:(e,t)=>`${t+1}. ${e.name} - Date: ${B(e.date)}`},{title:"Observations",items:e.observations,formatItem:(e,t)=>`${t+1}. ${e.name} - Date: ${B(e.date)} - Value: ${e.value}`},{title:"Immunizations",items:e.immunizations,formatItem:(e,t)=>`${t+1}. ${e.name} - Date: ${e.date.split("T")[0]} - System: ${e.system}`}].forEach(e=>{i-=15,i<50&&(i=l-50,t.addPage()),c(e.title,o,12,50,i),i-=15,e.items.forEach((a,n)=>{i<50&&(i=l-50,t.addPage());const o=e.formatItem(a,n);i=c(o,r,10,50,i),i-=5})});const m=await t.save(),s=new Blob([m],{type:"application/pdf"}),d=URL.createObjectURL(s),u=window.open(d);setTimeout(()=>{u.document.title=`Patient_${e.patient.given}_${e.patient.name}_Report.pdf`;const t=u.document.createElement("a");t.href=d,t.download=`Patient_${e.patient.given}_${e.patient.name}_Report.pdf`,u.document.body.appendChild(t),setTimeout(()=>{t.parentNode.removeChild(t)},1e3)},500)})(t)}},l.a.createElement(N.a,{icon:I.f}))),l.a.createElement(f.a,{placement:"top",overlay:U("Edit IPS Record")},l.a.createElement(s.a,{variant:"outline-secondary",className:"custom-button",onClick:()=>{v({...t}),g(!0)}},l.a.createElement(N.a,{icon:I.e}))),l.a.createElement(f.a,{placement:"top",overlay:U("Delete IPS Record")},l.a.createElement(s.a,{variant:"outline-danger",className:"custom-button",onClick:()=>u(!0)},l.a.createElement(N.a,{icon:I.i})))),l.a.createElement(y.a,{show:d,onHide:L},l.a.createElement(y.a.Header,{closeButton:!0},l.a.createElement(y.a.Title,null,"Confirm Deletion")),l.a.createElement(y.a.Body,null,"Are you sure you want to delete this IPS record?"),l.a.createElement(y.a.Footer,null,l.a.createElement(s.a,{variant:"secondary",onClick:L},"Cancel"),l.a.createElement(s.a,{variant:"danger",onClick:()=>{a(t._id),u(!1)}},"Delete"))),l.a.createElement(y.a,{show:p,onHide:()=>g(!1),dialogClassName:"edit-modal"},l.a.createElement(y.a.Header,{closeButton:!0},l.a.createElement(y.a.Title,null,"Edit Patient")),l.a.createElement(y.a.Body,null,l.a.createElement(m.a,null,l.a.createElement(S.a,null,l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"formPatientName"},l.a.createElement(m.a.Label,null,"Name"),l.a.createElement(m.a.Control,{type:"text",name:"name",value:h.patient.name,onChange:x}))),l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"formPatientGiven"},l.a.createElement(m.a.Label,null,"Given Name"),l.a.createElement(m.a.Control,{type:"text",name:"given",value:h.patient.given,onChange:x})))),l.a.createElement(S.a,null,l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"formPatientDOB"},l.a.createElement(m.a.Label,null,"DOB"),l.a.createElement(m.a.Control,{type:"date",name:"dob",value:h.patient.dob.split("T")[0],onChange:x}))),l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"formPatientGender"},l.a.createElement(m.a.Label,null,"Gender"),l.a.createElement(m.a.Control,{as:"select",name:"gender",value:h.patient.gender,onChange:x},l.a.createElement("option",{value:""},"Select Gender"),l.a.createElement("option",{value:"Male"},"Male"),l.a.createElement("option",{value:"Female"},"Female"),l.a.createElement("option",{value:"Other"},"Other"),l.a.createElement("option",{value:"Unknown"},"Unknown"))))),l.a.createElement(S.a,null,l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"formPatientNation"},l.a.createElement(m.a.Label,null,"Country"),l.a.createElement(m.a.Control,{type:"text",name:"nation",value:h.patient.nation,onChange:x}))),l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"formPatientPractitioner"},l.a.createElement(m.a.Label,null,"Practitioner"),l.a.createElement(m.a.Control,{type:"text",name:"practitioner",value:h.patient.practitioner,onChange:x})))),l.a.createElement(S.a,null,l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"formPatientOrganization"},l.a.createElement(m.a.Label,null,"Organization"),l.a.createElement(m.a.Control,{type:"text",name:"organization",value:h.patient.organization,onChange:x})))),l.a.createElement("h4",null,"Medications:"),h.medication.map((e,t)=>l.a.createElement(S.a,{key:t,className:"align-items-center"},l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"medicationName-"+t},l.a.createElement(m.a.Control,{type:"text",name:"name",placeholder:"Medication",value:e.name,onChange:e=>G("medication",t,e)}))),l.a.createElement(P.a,{xs:3},l.a.createElement(m.a.Group,{controlId:"medicationDate-"+t},l.a.createElement(m.a.Control,{type:"datetime-local",name:"date",value:k(e.date),onChange:e=>G("medication",t,e)}))),l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"medicationDosage-"+t},l.a.createElement(m.a.Control,{type:"text",name:"dosage",placeholder:"Dosage",value:e.dosage,onChange:e=>G("medication",t,e)}))),l.a.createElement(P.a,{xs:"auto"},l.a.createElement(s.a,{variant:"outline-danger",className:"custom-button",onClick:()=>M("medication",t)},l.a.createElement(N.a,{icon:I.i}))))),l.a.createElement(s.a,{variant:"primary",className:"mb-3",onClick:()=>_("medication")},"Add Medication"),l.a.createElement("h4",null,"Allergies:"),h.allergies.map((e,t)=>l.a.createElement(S.a,{key:t,className:"align-items-center"},l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"allergyName-"+t},l.a.createElement(m.a.Control,{type:"text",name:"name",placeholder:"Allergy",value:e.name,onChange:e=>G("allergies",t,e)}))),l.a.createElement(P.a,{xs:2},l.a.createElement(m.a.Group,{controlId:"allergyCriticality-"+t},l.a.createElement(m.a.Control,{as:"select",name:"criticality",placeholder:"Criticality:High/Moderate/Low",value:e.criticality,onChange:e=>G("allergies",t,e)},l.a.createElement("option",{value:""},"Select Criticality"),l.a.createElement("option",{value:"High"},"High"),l.a.createElement("option",{value:"Medium"},"Medium"),l.a.createElement("option",{value:"Low"},"Low")))),l.a.createElement(P.a,{xs:2},l.a.createElement(m.a.Group,{controlId:"allergyDate-"+t},l.a.createElement(m.a.Control,{type:"date",name:"date",value:e.date.split("T")[0],onChange:e=>G("allergies",t,e)}))),l.a.createElement(P.a,{xs:"auto"},l.a.createElement(s.a,{variant:"outline-danger",className:"custom-button",onClick:()=>M("allergies",t)},l.a.createElement(N.a,{icon:I.i}))))),l.a.createElement(s.a,{variant:"primary",className:"mb-3",onClick:()=>_("allergies")},"Add Allergy"),l.a.createElement("h4",null,"Conditions:"),h.conditions.map((e,t)=>l.a.createElement(S.a,{key:t,className:"align-items-center"},l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"conditionName-"+t},l.a.createElement(m.a.Control,{type:"text",name:"name",value:e.name,onChange:e=>G("conditions",t,e)}))),l.a.createElement(P.a,{xs:2},l.a.createElement(m.a.Group,{controlId:"conditionDate-"+t},l.a.createElement(m.a.Control,{type:"date",name:"date",value:e.date.split("T")[0],onChange:e=>G("conditions",t,e)}))),l.a.createElement(P.a,{xs:"auto"},l.a.createElement(s.a,{variant:"outline-danger",className:"custom-button",onClick:()=>M("conditions",t)},l.a.createElement(N.a,{icon:I.i}))))),l.a.createElement(s.a,{variant:"primary",className:"mb-3",onClick:()=>_("conditions")},"Add Condition"),l.a.createElement("h4",null,"Observations:"),h.observations.map((e,t)=>l.a.createElement(S.a,{key:t,className:"align-items-center"},l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"observationName-"+t},l.a.createElement(m.a.Control,{as:"select",name:"name",value:e.name,onChange:e=>G("observations",t,e)},l.a.createElement("option",{value:""},"Select an observation or enter custom"),l.a.createElement("option",{value:"Blood Pressure"},"Blood Pressure"),l.a.createElement("option",{value:"Pulse"},"Pulse"),l.a.createElement("option",{value:"Resp Rate"},"Resp Rate"),l.a.createElement("option",{value:"Temperature"},"Temperature"),l.a.createElement("option",{value:"Oxygen Sats"},"Oxygen Sats"),l.a.createElement("option",{value:"AVPU"},"AVPU")),l.a.createElement(m.a.Control,{type:"text",name:"name",value:e.name,onChange:e=>G("observations",t,e),placeholder:"Custom Observation",className:"mt-2"}))),l.a.createElement(P.a,{xs:3},l.a.createElement(m.a.Group,{controlId:"observationDate-"+t},l.a.createElement(m.a.Control,{type:"datetime-local",name:"date",value:k(e.date),onChange:e=>G("observations",t,e)}))),l.a.createElement(P.a,null,l.a.createElement("h6",null,"Numerical=Vitals, Text=Body site else blank"),l.a.createElement(m.a.Group,{controlId:"observationValue-"+t},l.a.createElement(m.a.Control,{type:"text",name:"value",value:e.value,onChange:e=>G("observations",t,e)}))),l.a.createElement(P.a,{xs:"auto"},l.a.createElement(s.a,{variant:"outline-danger",className:"custom-button",onClick:()=>M("observations",t)},l.a.createElement(N.a,{icon:I.i}))))),l.a.createElement(s.a,{variant:"primary",className:"mb-3",onClick:()=>_("observations")},"Add Observation"),l.a.createElement("h4",null,"Immunizations:"),h.immunizations.map((e,t)=>l.a.createElement(S.a,{key:t,className:"align-items-center"},l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"immunizationName-"+t},l.a.createElement(m.a.Control,{type:"text",name:"name",placeholder:"Immunization",value:e.name,onChange:e=>G("immunizations",t,e)}))),l.a.createElement(P.a,null,l.a.createElement(m.a.Group,{controlId:"immunizationSystem-"+t},l.a.createElement(m.a.Control,{type:"text",name:"system",placeholder:"Coding System",value:e.system,onChange:e=>G("immunizations",t,e)}))),l.a.createElement(P.a,{xs:3},l.a.createElement(m.a.Group,{controlId:"immunizationDate-"+t},l.a.createElement(m.a.Control,{type:"datetime-local",name:"date",value:k(e.date),onChange:e=>G("immunizations",t,e)}))),l.a.createElement(P.a,{xs:"auto"},l.a.createElement(s.a,{variant:"outline-danger",className:"custom-button",onClick:()=>M("immunizations",t)},l.a.createElement(N.a,{icon:I.i}))))),l.a.createElement(s.a,{variant:"primary",className:"mb-3",onClick:()=>_("immunizations")},"Add Immunization"))),l.a.createElement(y.a.Footer,null,l.a.createElement(s.a,{variant:"secondary",onClick:()=>g(!1)},"Cancel"),l.a.createElement(s.a,{variant:"primary",className:"mbsave",onClick:()=>{O(),E.a.put("/ips/"+t._id,h).then(e=>{r(e.data),g(!1)}).catch(e=>console.error("There was an error updating the IPS record!",e)).finally(()=>A())}},"Save Changes"))))}const R=Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_API_BASE_URL?E.a.create({baseURL:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_API_BASE_URL}):E.a.create({});var x=function(){const[e,t]=Object(n.useState)(""),{selectedPatients:a,setSelectedPatients:r,setSelectedPatient:o}=Object(n.useContext)(C),{startLoading:i,stopLoading:c}=D(),u=e=>{i(),R.delete("/ips/"+e).then(e=>e.data).then(e=>{const t=[...a];let n=a.findIndex(t=>t._id===e);-1!==n&&(t.splice(n,1),r(t))}).catch(e=>{console.log("Error",e)}).finally(()=>{c()})},E=e=>{const t=a.map(t=>t._id===e._id?e:t);r(t),o(e)};return l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement(v,{add:e=>{const t=e.medication.filter(e=>""!==e.name.trim()||""!==e.date.trim()||""!==e.dosage.trim()),n=e.allergies.filter(e=>""!==e.name.trim()||""!==e.criticality.trim()||""!==e.date.trim()),l=e.conditions.filter(e=>""!==e.name.trim()||""!==e.date.trim()),m=e.observations.filter(e=>""!==e.name.trim()||""!==e.date.trim()||""!==e.value.trim()),s=e.immunizations.filter(e=>""!==e.name.trim()||""!==e.date.trim()),d={...e,medication:t,allergies:n,conditions:l,observations:m,immunizations:s};console.log("Form Data",d),console.log(JSON.stringify(d,null,2)),i(),R.post("/ips",d).then(e=>e.data).then(e=>{if(e){const t=[...a,e];r(t),o(e)}}).catch(e=>{console.log("Error",e)}).finally(()=>{c()})}}),l.a.createElement("h3",null,"Find Patient"),l.a.createElement(m.a,{onSubmit:t=>{t.preventDefault(),i(),R.get("/ips/search/"+e).then(e=>e.data).then(e=>{e&&(r(e),e.length>0&&o(e[0]))}).catch(e=>{console.log("Error",e)}).finally(()=>{c()})}},l.a.createElement(m.a.Group,{controlId:"searchTerm"},l.a.createElement(m.a.Label,null,"Patient Name"),l.a.createElement(m.a.Control,{type:"text",placeholder:"Enter patient name",value:e,onChange:e=>{t(e.target.value)}})),l.a.createElement(s.a,{variant:"primary",type:"submit",className:"mb-3"},"Search")),l.a.createElement("h3",null,"Matching Patients"),l.a.createElement("div",null,a.map(e=>l.a.createElement(d.a,{key:e._id,onClick:()=>o(e)},l.a.createElement(d.a.Body,null,l.a.createElement(L,{ips:e,remove:u,update:E})))))))},_=a(223),M=a(361),G=a(46),U=a(371);var j=function(){const{selectedPatients:e,selectedPatient:t,setSelectedPatient:a}=Object(n.useContext)(C),[r,o]=Object(n.useState)(""),[i,c]=Object(n.useState)("ipsurl"),[m,d]=Object(n.useState)(!1),[u,p]=Object(n.useState)(0),{startLoading:g,stopLoading:h}=D();Object(n.useEffect)(()=>{if(t){let e;if(e="ipsbeerwithdelim"===i?`/ipsbeer/${t._id}/pipe`:`/${i}/${t._id}`,"ipsurl"===i){const e=`${window.location.origin}/ips/${t.packageUUID}`;o(e),p(e.length),d(!1),h()}else E.a.get(e).then(e=>{let t;t="ipsminimal"===i||"ipsbeer"===i||"ipsbeerwithdelim"===i||"ipshl728"===i?e.data:JSON.stringify(e.data);const a=(new TextEncoder).encode(t).length;p(a),console.log("Response data length:",a),a>3e3?d(!0):(o(t),console.log("QR Data:",t),d(!1))}).catch(e=>{console.error("Error fetching IPS record:",e)}).finally(()=>{h()})}},[t,i,h]);const v=Math.min(.8*window.innerWidth,.8*window.innerHeight,600);return l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement("div",{className:"header-container"},l.a.createElement("h3",null,"Generate QR Code ","ipsurl"!==i&&l.a.createElement("span",{className:"response-size"}," - ",u," bytes"))),e.length>0&&t&&l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"dropdown-container"},l.a.createElement(M.a,{id:"dropdown-record",title:`Patient: ${t.patient.given} ${t.patient.name}`,className:"dropdown-button"},e.map(n=>l.a.createElement(G.a.Item,{key:n._id,onClick:()=>(t=>{const n=e.find(e=>e._id===t);g(),a(n)})(n._id),active:t&&t._id===n._id},n.patient.given," ",n.patient.name)))),l.a.createElement("div",{className:"dropdown-container"},l.a.createElement(M.a,{id:"dropdown-mode",title:"Mode: "+i,onSelect:e=>{g(),c(e)},className:"dropdown-button"},l.a.createElement(G.a.Item,{eventKey:"ipsurl"},"IPS URL"),l.a.createElement(G.a.Item,{eventKey:"ips"},"IPS JSON Bundle"),l.a.createElement(G.a.Item,{eventKey:"ipsbasic"},"IPS Minimal"),l.a.createElement(G.a.Item,{eventKey:"ipsmongo"},"IPS MongoDB"),l.a.createElement(G.a.Item,{eventKey:"ipslegacy"},"IPS Legacy JSON Bundle"),l.a.createElement(G.a.Item,{eventKey:"ipsbeer"},"IPS BEER (newline)"),l.a.createElement(G.a.Item,{eventKey:"ipsbeerwithdelim"},"IPS BEER with Delimiter (pipe |)"),l.a.createElement(G.a.Item,{eventKey:"ipshl728"},"IPS HL7 v2.8")))),m?l.a.createElement(U.a,{variant:"danger"},"Data is too large to display. Please try a different mode."):l.a.createElement("div",{className:"qr-container"},l.a.createElement(_.a,{id:"qr-canvas",value:r,size:v})),l.a.createElement("br",null),l.a.createElement("div",{className:"button-container"},l.a.createElement(s.a,{className:"mb-3",onClick:()=>{const e=document.getElementById("qr-canvas").toDataURL("image/png"),t=document.createElement("a");t.href=e,t.download="ips_qr_code.png",document.body.appendChild(t),t.click(),document.body.removeChild(t)}},"Download QR Code"))))};var J=function(){const[e,t]=Object(n.useState)(""),[a,r]=Object(n.useState)([]),[o,i]=Object(n.useState)(!1),[c,d]=Object(n.useState)(!1),{startLoading:u,stopLoading:p}=D(),g=e=>/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(e);return l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement("h3",null,"Bulk Upload of DMICP Data for IPS"),l.a.createElement("div",{className:"text-area"},l.a.createElement(m.a.Control,{as:"textarea",rows:10,value:e,onChange:e=>{t(e.target.value)},placeholder:"Paste your DMICP data here...\r\n(This should be the CSV format created using the IPS SmartDoc)"})),l.a.createElement("br",null),l.a.createElement(s.a,{className:"mb-3",onClick:()=>{if(!e.trim())return;const t=e.split("\n").map(e=>{const t=e.split(",");if(10!==t.length)return console.error("Invalid number of fields:",t),null;const[a,n,l,r,o,i,c,...m]=t;if(!a||!n||!l||!r||!o||!i||!c)return console.error("Missing required fields:",t),null;if(!g(a))return console.error("Invalid UUID format for packageUUID:",a),null;if(!/^\d{4}-\d{2}-\d{2}$/.test(r))return console.error("Invalid date format for dob:",r),null;let s=o;const d={f:"Female",m:"Male",u:"Unknown",o:"Other"}[o.toLowerCase()];d&&(s=d);const u=(new Date).toISOString(),E=[];if(m[0]){const e=m[0].split(";");if(e.length%3!==0)return console.error("Invalid medication data:",m[0]),null;for(let t=0;t<e.length;t+=3){const[a,n,l]=e.slice(t,t+3);if(!a||!n||!l)return console.error("Missing medication field:",e.slice(t,t+3)),null;if(!/^\d{4}-\d{2}-\d{2}$/.test(n))return console.error("Invalid date format for medication date:",n),null;E.push({name:a,date:n,dosage:l})}}const p=[];if(m[1]){const e=m[1].split(";");if(e.length%3!==0)return console.error("Invalid allergies data:",m[1]),null;for(let t=0;t<e.length;t+=3){const[a,n,l]=e.slice(t,t+3);if(!a||!n||!l)return console.error("Missing allergy field:",e.slice(t,t+3)),null;if(!/^\d{4}-\d{2}-\d{2}$/.test(l))return console.error("Invalid date format for allergy date:",l),null;const r=a.trim();p.find(e=>e.name===r)||p.push({name:r,criticality:n,date:l})}}const h=[];if(m[2]){const e=m[2].split(";");if(e.length%2!==0)return console.error("Invalid conditions data:",m[2]),null;for(let t=0;t<e.length;t+=2){const[a,n]=e.slice(t,t+2);if(!a||!n)return console.error("Missing condition field:",e.slice(t,t+2)),null;if(!/^\d{4}-\d{2}-\d{2}$/.test(n))return console.error("Invalid date format for condition date:",n),null;const l=a.trim();h.find(e=>e.name===l)||h.push({name:l,date:n})}}return{packageUUID:a,timeStamp:u,patient:{name:n,given:l,dob:r,gender:s,nation:i,practitioner:c},medication:E,allergies:p,conditions:h}}).filter(e=>null!==e);console.log("IPS Records:",t),console.log(JSON.stringify(t,null,2)),0===t.length?d(!0):(r(t),i(!0))}},"Convert Pasted Data into IPS Records")),l.a.createElement(y.a,{show:c,onHide:()=>d(!1)},l.a.createElement(y.a.Header,{closeButton:!0},l.a.createElement(y.a.Title,null,"IPS Import Error")),l.a.createElement(y.a.Body,null,l.a.createElement("p",null,"No records passed validation. Please check your data and try again.")),l.a.createElement(y.a.Footer,null,l.a.createElement(s.a,{variant:"primary",onClick:()=>d(!1)},"Close"))),l.a.createElement(y.a,{show:o,onHide:()=>i(!1)},l.a.createElement(y.a.Header,{closeButton:!0},l.a.createElement(y.a.Title,null,"IPS Record Submission Confirmation")),l.a.createElement(y.a.Body,null,a.length>0&&l.a.createElement("p",null,a.length," records have passed validation. Do you want to submit?")),l.a.createElement(y.a.Footer,null,l.a.createElement(s.a,{variant:"secondary",onClick:()=>i(!1)},"Cancel"),l.a.createElement(s.a,{variant:"primary",onClick:()=>{i(!1),u(),E.a.post("/ipsmany",a).then(e=>{console.log("Data uploaded successfully:",e.data)}).catch(e=>{console.error("Error uploading data:",e)}).finally(()=>{p()}),t("")}},"Submit"))))},V=a(362);var z=function(){return l.a.createElement(V.a,{className:"mt-5"},l.a.createElement(S.a,null,l.a.createElement(P.a,null,l.a.createElement("h3",null,"About International Patient Summary (IPS)"),l.a.createElement("p",null,"The International Patient Summary (IPS) is a standardized health data format designed to facilitate the exchange of patient health information across different healthcare systems and countries. It aims to improve interoperability and enable seamless sharing of medical records, ensuring better patient care and safety."),l.a.createElement("p",null,"IPS contains essential health information such as patient demographics, medical history, medications, allergies, and more, in a structured and standardized format."))),l.a.createElement(S.a,{className:"mt-4"},l.a.createElement(P.a,null,l.a.createElement("h3",null,"Useful Links"),l.a.createElement(d.a,null,l.a.createElement(d.a.Body,null,l.a.createElement(d.a.Title,null,"IPS Implementation Guide"),l.a.createElement(d.a.Text,null,"Explore the IPS implementation guide for detailed information on data elements, standards, and implementation best practices."),l.a.createElement(d.a.Link,{href:"https://www.hl7.org/fhir/uv/ips/"},"IPS Implementation Guide"))),l.a.createElement(d.a,null,l.a.createElement(d.a.Body,null,l.a.createElement(d.a.Title,null,"IPS Website"),l.a.createElement(d.a.Text,null,"Visit the official website of the International Patient Summary (IPS) to learn more about the standard and its implementation."),l.a.createElement(d.a.Link,{href:"https://international-patient-summary.net"},"IPS Website"))))))},F=a(366),q=a(372),$=a(363);a(352);const H=Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_API_BASE_URL?E.a.create({baseURL:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_API_BASE_URL}):E.a.create({});var Q=function(e){let{collapseNavbar:t}=e;const[a,r]=Object(n.useState)(""),{setSelectedPatients:o,setSelectedPatient:i}=Object(n.useContext)(C),{startLoading:c,stopLoading:d}=D();return l.a.createElement(m.a,{inline:!0,onSubmit:e=>{e.preventDefault(),c(),H.get("/ips/search/"+a).then(e=>e.data).then(e=>{e&&(o(e),e.length>0&&(i(e[0]),t()))}).catch(e=>{console.log("Error",e)}).finally(()=>{d()})},className:"search-form"},l.a.createElement(m.a.Control,{type:"text",placeholder:"Find Patient",value:a,onChange:e=>{r(e.target.value)},className:"mr-sm-2 form-control"}),l.a.createElement(s.a,{variant:"outline-light",type:"submit"},"Search"))};var K=function(){const{selectedPatients:e,setSelectedPatient:t,selectedPatient:a}=Object(n.useContext)(C),[r,o]=Object(n.useState)(!1),{startLoading:m}=D(),s=Object(c.m)();Object(n.useEffect)(()=>{e.length>0&&t(e[0])},[e,t]);const d=e=>{o(!1),e&&a&&m()};return l.a.createElement(F.a,{expanded:r,expand:"lg",bg:"dark",variant:"dark",fixed:"top"},l.a.createElement(V.a,null,l.a.createElement(F.a.Brand,{as:i.b,to:"/",onClick:()=>d(!1)},l.a.createElement("img",{src:"/ipsnavbar.ico",width:"25",height:"25",className:"d-inline-block align-center",alt:"IPS Logo",style:{marginRight:"10px"}}),"IPS D2S Prototype 0_48"),l.a.createElement(F.a.Toggle,{"aria-controls":"basic-navbar-nav",onClick:()=>o(!r)}),l.a.createElement(F.a.Collapse,{id:"basic-navbar-nav"},l.a.createElement(q.a,{className:"me-auto"},l.a.createElement(q.a.Link,{as:i.b,to:"/api",onClick:()=>d(!0)},l.a.createElement(N.a,{icon:I.g})," API"),l.a.createElement(q.a.Link,{as:i.b,to:"/qr",onClick:()=>d(!0)},l.a.createElement(N.a,{icon:I.h})," QR"),l.a.createElement(q.a.Link,{as:i.b,to:"/bulkupload",onClick:()=>d(!1)},l.a.createElement(N.a,{icon:I.j})," DMICP"),l.a.createElement(q.a.Link,{as:i.b,to:"/beergarden",onClick:()=>d(!0)},l.a.createElement(N.a,{icon:I.a})," BEER"),l.a.createElement($.a,{title:l.a.createElement("span",null,l.a.createElement(N.a,{icon:I.b})," VitalsIQ API"),id:"basic-nav-dropdown"},l.a.createElement($.a.Item,{as:i.b,to:"/ipsoffroad",onClick:()=>d(!1)},l.a.createElement(N.a,{icon:I.j})," VitalsIQ GET"),l.a.createElement($.a.Item,{as:i.b,to:"/offroadpost",onClick:()=>d(!0)},l.a.createElement(N.a,{icon:I.d})," VitalsIQ POST")),l.a.createElement($.a,{title:l.a.createElement("span",null,l.a.createElement(N.a,{icon:I.c})," NLD API"),id:"basic-nav-dropdown"},l.a.createElement($.a.Item,{as:i.b,to:"/pushipsnld",onClick:()=>d(!0)},l.a.createElement(N.a,{icon:I.d})," NLD POST")),l.a.createElement($.a,{title:"Info",id:"basic-nav-dropdown"},l.a.createElement($.a.Item,{as:i.b,to:"/about",onClick:()=>d(!1)},"About IPS"),l.a.createElement($.a.Item,{as:i.b,to:"/aboutwebapp",onClick:()=>d(!1)},"About Web App"),l.a.createElement($.a.Divider,null),l.a.createElement($.a.Item,{as:i.b,to:"/changelog",onClick:()=>d(!1)},"Change Log"),l.a.createElement($.a.Divider,null),l.a.createElement($.a.Item,{as:i.b,to:"/apidocumentation",onClick:()=>d(!1)},"API Documentation"))),e.length>0&&l.a.createElement(q.a,null,l.a.createElement($.a,{title:a?`${a.patient.given} ${a.patient.name}`:"Selected Patients",id:"selected-patients-dropdown"},e.map(e=>l.a.createElement($.a.Item,{key:e._id,onClick:()=>(e=>{t(e),o(!1);const a=s.pathname;["/api","/qr","/beergarden","/offroadpost"].includes(a)&&m()})(e)},e.patient.given," ",e.patient.name)))),l.a.createElement(Q,{collapseNavbar:()=>{o(!1)}}))))};var W=function(){return l.a.createElement(V.a,{className:"mt-5"},l.a.createElement(S.a,null,l.a.createElement(P.a,null,l.a.createElement("h3",null,"ChangeLog - Versions refer to Cloud Deployments"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_1 (Initial Release) - 2nd May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Implemented basic functionality for the MERN web app.")),l.a.createElement("li",null,"Single page with data entry and previous data display"),l.a.createElement("li",null,"Previous data display has simple delete button"),l.a.createElement("li",null,"Only API GET call is /ips/all which displays all records"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_2 - 3rd May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Improved data presentation, delete confirm and IPS API additions")),l.a.createElement("li",null,"Data presented in compact form with expand mechanism"),l.a.createElement("li",null,"Delete button now has confirmation prompt - to avoid accidental deletion"),l.a.createElement("li",null,"Added API GET calls for /ips/:id (IPS Bundle - JSON) and /ipsraw/:id (MongoDb Native format - JSON)"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_3 - 4th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Implemented QR Generator, (non-functional) Data Upload page and Navigation.")),l.a.createElement("li",null,"QR code Generation of IPS Bundle and MongoDb record format."),l.a.createElement("li",null,"Data Upload page just a stub for later development"),l.a.createElement("li",null,"Navigation Bar added for easy access to all pages"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_4 - 4th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Per-record QR Button, new data format for both API and QR Generator")),l.a.createElement("li",null,"QR Button added to previous record display to jump to QR Generator Page for that record"),l.a.createElement("li",null,"Minimised IPS data format - Plain Text. Same format as generated by SmartDoc (DMICP) and read by FUB-QR (SmartPhone App)"),l.a.createElement("li",null,"QR Generator now uses the new format as additional option -checked is indeed readable by FUB-QR"),l.a.createElement("li",null,"API GET call for minimised format is /ipsbasic/:id"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_5 - 4th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Better Navigation format and QR URL for Patient")),l.a.createElement("li",null,"QR Generator includes new mode representing - in Plain Text - the API endpoint for the IPS Bundle"),l.a.createElement("li",null,"Concept would be to download QR image and give/send patient"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_6 - 5th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added About IPS and ChangeLog page, Hide data entry form")),l.a.createElement("li",null,"About IPS page to give brief context - non-sensitive"),l.a.createElement("li",null,"ChangeLog page to track project updates and improvements."),l.a.createElement("li",null,"Hide data entry form button to allow more space for data display"),l.a.createElement("li",null,"Added additional data validation before submission"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_7 - 6th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added real functionality to Bulk Upload page")),l.a.createElement("li",null,"Bulk Upload page to allow pasting of multiple records for conversion"),l.a.createElement("li",null,"Format expected is that generated by accompanying DMICP SmartDoc"),l.a.createElement("li",null,"Main fields are comma separated, medication and allergies are then semicolon separated"),l.a.createElement("li",null,"Validation of data and confirmation before submission"),l.a.createElement("li",null,"Process allows valid records to be submitted whilst skipping invalid ones"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_8 - 6th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added UUID validator for Bulk Upload")),l.a.createElement("li",null,"UUID validator is basic regex - so not true validator - but will suffice for now"),l.a.createElement("li",null,"SmartDoc will generate valid UUIDs by default, so validator just to avoid incorrect manual efforts"),l.a.createElement("li",null,"Separate message if no supplied records pass validation"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_9 - 6th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Logo and Navbar Changes")),l.a.createElement("li",null,"Added new logo to replace stock React App one"),l.a.createElement("li",null,"Navbar is now fixed at top"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_10 - 8th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"QR Code Size Check")),l.a.createElement("li",null,"QR Code data size check - and user feedback - to avoid display errors"),l.a.createElement("li",null,"Threshold set to 3000 but most codes at this size unreadable except on most recent SmartPhones"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_11 - 9th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"New XML Format and IPS JSON Format change")),l.a.createElement("li",null,"IPS Bundle format now compatible with the ",l.a.createElement("a",{href:"https://ipsviewer.com",target:"_blank",rel:"noopener noreferrer"},"IPS Viewer")),l.a.createElement("li",null,"This is closer to the IPS.net ",l.a.createElement("a",{href:"https://github.com/jddamore/IPSviewer/tree/main/samples",target:"_blank",rel:"noopener noreferrer"},"samples and examples")),l.a.createElement("li",null,"In particular it leads with a Composition resource"),l.a.createElement("li",null,"XML format added to API - modelled on JSON format"),l.a.createElement("li",null,"API GET is /ipsxml/:id"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_12 - 9th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added API GET Data Viewer")),l.a.createElement("li",null,"Allows more convient viewing of data formats returned by the various API GET endpoints"),l.a.createElement("li",null,"API Button added to individual records on HomePage as quick link"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_13 - 10th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Legacy IPS JSON and Screen Realestate")),l.a.createElement("li",null,"Added IPS Legacy format to API endpoints and API Page - based on version 2 of bundle"),l.a.createElement("li",null,"For illustration purposes only - as comparison to 'regular' version."),l.a.createElement("li",null,"API GET is /ipslegacy/:id"),l.a.createElement("li",null,"Various Screen realestate improvements for QR and API pages"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_14 - 11th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Cosmetic changes and hyperlinks")),l.a.createElement("li",null,"Links in various places to aide testing"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_15 - 17th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added API GET and POST")),l.a.createElement("li",null,"API GET allows the return of an IPS Bundle using the endpoint /ipsbyname/:name/:given"),l.a.createElement("li",null,"API POST allows the creation of a new entry in the database from an IPS JSON Bundle"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_16 - 18th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added Gender and Conditions")),l.a.createElement("li",null,"Large update as entire schema changed"),l.a.createElement("li",null,"All input, import, export and generation code changed"),l.a.createElement("li",null,"Old entries against previous schema no longer valid as two fields have changed name"),l.a.createElement("li",null,"nationality to nation, and severity to criticality"),l.a.createElement("li",null,"Old database will be deleted"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_17 - 19th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Replaced 'Display All' with Search Functionality")),l.a.createElement("li",null,"Search for IPS records based on patient's name"),l.a.createElement("li",null,"API GET call is /ips/search/:name"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_18 - 19th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Patient Selection Preservation")),l.a.createElement("li",null,"Selected patients are preserved across the App"),l.a.createElement("li",null,"At least one patient needs to be selected to display anything on QR and API pages"),l.a.createElement("li",null,"'Select Records' dropdown is now confined to only those records returned by search"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_19 - 19th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Optional :id endpoints")),l.a.createElement("li",null,"API GET endpoints that use /:id will now accept both MongoDB internal _id and IPS id (packageUUID)"),l.a.createElement("li",null,"Improvements to 'Active' Patient functionality throughout app"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_20 - 22nd May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added VitalsIQ API Page")),l.a.createElement("li",null,"Page to allow direct access to the VitalsIQ API"),l.a.createElement("li",null,"API is at https://4202xiwc.offroadapps.dev:62444/Fhir/ips/json/surname/firstname"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_21 - 23rd May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"API Comms Client-to-Server")),l.a.createElement("li",null,"Axios GET code moved to server-side to avoid BPS issues"),l.a.createElement("li",null,"API GET used internally - but could be used extenally - is /fetchipsora/surname/firstname"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_22- 23rd May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Record Creation from ORA IPS Bundle")),l.a.createElement("li",null,"Can now convert an VitalsIQ IPS Bundle to a MongoDb Record"),l.a.createElement("li",null,"Made the Condition Date optional - defaults to today's date - to facilate testing"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_23- 23rd May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added API POST to ORA")),l.a.createElement("li",null,"API POST allows the sending IPS JSON Bundle to VitalsIQ WebApp"),l.a.createElement("li",null,"Internal API endpoint is /pushipsora"),l.a.createElement("li",null,"External API endpoint is at https://4202xiwc.offroadapps.dev:62444/Fhir/ips/json"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_24 - 26th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added API GET for BEER")),l.a.createElement("li",null,"API GET allows the return of an IPS Bundle with the BEER data format using the endpoint /ipsbeer/:id"),l.a.createElement("li",null,"Note: At this point BEER format is under development - so this represents an initial attempt"),l.a.createElement("li",null,"API and QR Page include BEER modes"),l.a.createElement("li",null,"QR Page displays the QR size in bites"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_25 - 27th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added BEER Garden Page")),l.a.createElement("li",null,"Page to allow conversion between MongoDb and BEER formats"),l.a.createElement("li",null,"BEER format is under development - so this represents an initial attempt"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_26 - 27th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added NavBar Search")),l.a.createElement("li",null,"Search for IPS records based on patient's family/surname"),l.a.createElement("li",null,"Removed HomePage from NavBar - as same functionality available from clicking on IPS Main Title and Logo"),l.a.createElement("li",null,"Creates more space for other NavBar items"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_27 - 28th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added Edit Functionality")),l.a.createElement("li",null,"Allows editing of existing IPS records"),l.a.createElement("li",null,"Added Edit button to individual records on HomePage"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_28 - 29th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added Spinner")),l.a.createElement("li",null,"Added Spinner to indicate loading for asynchronous functions"),l.a.createElement("li",null,"Spinner appears for any action that relies on fetching or posting data"),l.a.createElement("li",null,"Whether using the internal or external API"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_29 - 30th May 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added Observation Resource")),l.a.createElement("li",null,"Added Observation resource to IPS Bundle"),l.a.createElement("li",null,"Observation resource includes a code, value, and date"),l.a.createElement("li",null,"If value start numerical then valueQuantity, if just text then bodySite, if blank then simple ob e.g. symptom"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_30 - 1st Jun 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added TimeStamp")),l.a.createElement("li",null,"Added fixed TimeStamp - previously generated with IPS bundle"),l.a.createElement("li",null,"Closer to IPS concept and aides BEER format development - items can be added post-timestamp"),l.a.createElement("li",null,"Generated whether by manual addition or Data Upload."),l.a.createElement("li",null,"If API GET used then the TimeStamp is the that provided by the IPS JSON bundle fetched"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_31 - 1st Jun 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added Observation and Allergy Dropdowns")),l.a.createElement("li",null,"Observation dropdown for key vital signs - temperature, blood pressure, pulse, respiration etc"),l.a.createElement("li",null,"Allergy dropdown for criticality - low, medium, high"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_32 - 3rd Jun 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Further BEER Format Development")),l.a.createElement("li",null,"Medication and Observations formatted differently depending on whether past or future relative to timestamp"),l.a.createElement("li",null,"Vital Sign observations in particular have a highly compact form"),l.a.createElement("li",null,"Design varies slightly from earlier concept but basic ideas remain"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_33 - 6th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added BEER - IPS JSON Conversion in BEER Garden")),l.a.createElement("li",null,"Manually edited BEER data can be converted to IPS JSON format or Native MongoDB"),l.a.createElement("li",null,"IPS JSON (converted internally from MongoDb) or manually edited - can be converted to BEER format"),l.a.createElement("li",null,"Byte size displayed for both formats"),l.a.createElement("li",null,"Neither option affects the stored record - just for display purposes"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_34 - 9th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added New Update/Edit Endpoint")),l.a.createElement("li",null,"Added new endpoint to allow updating of existing IPS records using UUID"),l.a.createElement("li",null,"API PUT call is /ipsuuid/:id"),l.a.createElement("li",null,"This means an external system that has POST/created a record - perhaps before patient id known - can then update it later"),l.a.createElement("li",null,"Changes to unique Patient data - e.g. name - are treated as edits, Medication, Allergies, Conditions and Observations are added to the record"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_35 - 12th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added API Documentation Page")),l.a.createElement("li",null,"Page to allow easy access to all API endpoints and their descriptions"),l.a.createElement("li",null,"API Documentation Page is accessible from the NavBar"),l.a.createElement("li",null,"/ipsbyname is now case-insensitive"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_36 - 12th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Organization added")),l.a.createElement("li",null,"Organization field added to MongoDB record"),l.a.createElement("li",null,"Previously was not being read and was being automatically set in exports/conversions to 'UK DMS'"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_37 - 13th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added API POST to NLD")),l.a.createElement("li",null,"API POST allows the sending IPS JSON Bundle to NLD WebApp"),l.a.createElement("li",null,"Internal API endpoint is /pushipsnld"),l.a.createElement("li",null,"External API endpoint is at https://medicalcloud.orange-synapse.nl/api/fhir/1"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_38 - 13th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"IPS BEER Parsing Delimiter Improvements")),l.a.createElement("li",null,"IPS BEER format can use various delimiters - newline, semicolon, pipe, colon, and @"),l.a.createElement("li",null,"If no delimiter is specified then all are tried before failing"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_39 - 14th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added CDA Functionality")),l.a.createElement("li",null,"API POST to create MongoDb record from CDA XML - endpoint is /ipsfromcda"),l.a.createElement("li",null,"API POST to convert CDA XML to IPS JSON Bundle - endpoint is /convertcdatoips - service only, no record is created"),l.a.createElement("li",null,"API POST to convert CDS XML to BEER format - endpoint is /convertcdatobeer - service only, no record is created"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_40 - 15th June 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added API Calls for IPS HL7 v2.8")),l.a.createElement("li",null,"API GET allows the return of an IPS Bundle with the HL7 v2.8 data format using the endpoint /ipshl728/:id"),l.a.createElement("li",null,"API POST allows conversion of MongoDb record to HL7 v2.8 format - endpoint is /convertmongo2hl7"),l.a.createElement("li",null,"Further endpoints for HL7 v2.8 are planned - note: there are likely formatting errors in the current implementation"),l.a.createElement("li",null,"The idea is give an approximate HL7 v2.8 format - not a perfect one - to judge likely file size and content"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_41 - 14th July 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"MERN to SERN")),l.a.createElement("li",null,"Database element of stack changed from MongoDB to SQL (MySQL) - to faciltate deployment on D2S OpenShift"),l.a.createElement("li",null,"For simplicity and speed of development, the SQL is converted to and from MongoDB format on retreiving and storing"),l.a.createElement("li",null,"This allows most of the existing code to remain unchanged"),l.a.createElement("li",null,"This also allows the API calls to remain the same - both payloads and responses"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_42 - 6th Aug 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Australian IPS Format")),l.a.createElement("li",null,"Ability to successfully POST /ipsbundle from IPS JSON Bundle generated by Australian Team"),l.a.createElement("li",null,"Note, interesting use of Medication resource embedded in MedicationRequest resource"),l.a.createElement("li",null,"Format passes IPSViewer checks"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_43 - 1st September 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added Immunization Resource")),l.a.createElement("li",null,"Integrated Immunization resource into the backend and frontend systems"),l.a.createElement("li",null,"Immunization resource includes a date, name, and system"),l.a.createElement("li",null,"Name can be either a textual entry or a code, with the system indicating the coding system used (e.g., SNOMED, WHO ATC) or a reference url"),l.a.createElement("li",null,"All conversions updated including 'from CDA', 'to HL7 2.8' and 'to and from BEER'"),l.a.createElement("li",null,"Note: HL7 2.8 message validation may show errors due to lack of data, but the data provided is in the correct positions. Please visit ",l.a.createElement("a",{href:"https://www.parsehog.com/hl7/parser",target:"_blank",rel:"noopener noreferrer"},"Parsehog HL7 Parser")," to validate and check the message structure yourself."))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_44 - 3rd September 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Added PDF Generation Feature")),l.a.createElement("li",null,"Implemented a new PDF generation function that allows patient reports to be viewed and downloaded as PDF documents"),l.a.createElement("li",null,"The PDF document is formatted to fit within A4 page dimensions, with automatic text wrapping to ensure readability"),l.a.createElement("li",null,"Patient data, including Medications, Allergies, Conditions, Observations, and Immunizations, are included in the PDF report"),l.a.createElement("li",null,"PDF opens in a new tab with a dynamic filename based on the patient's name, allowing for easy download and identification"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_45 - 13th November 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"HL7 2.8 Conversion Functionality")),l.a.createElement("li",null,"Added endpoints for chaining HL7 2.8 to MongoDB, then MongoDB to IPS JSON"),l.a.createElement("li",null,"Extended API documentation with complete list of available endpoints for CRUD operations, conversions, and integrations with external systems"),l.a.createElement("li",null,"API documentation pages updated to reflect latest changes"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_46 - 26th November 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Gzip Compression Support")),l.a.createElement("li",null,"Introduced middleware to handle gzip-encoded requests and responses"),l.a.createElement("li",null,"API now supports gzip encoding for both incoming and outgoing data, optimizing bandwidth usage"),l.a.createElement("li",null,"Enhanced compatibility with external clients by allowing Content-Encoding and Accept-Encoding headers for gzip"),l.a.createElement("li",null,"Added safeguards to bypass compression for internal calls, ensuring seamless frontend-backend communication"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_47 - 30th November 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Encryption Support with AES-256")),l.a.createElement("li",null,"Added middleware to handle AES-256 encrypted requests and responses"),l.a.createElement("li",null,"API now supports encrypted communication via `x-encrypted` and `accept-encryption` headers, ensuring secure data transfer"),l.a.createElement("li",null,"Implemented seamless integration of gzip compression and AES-256 encryption, allowing data to be compressed before encryption"),l.a.createElement("li",null,"Introduced a `/test` endpoint to facilitate testing of combined encryption and compression functionality"),l.a.createElement("li",null,"Enhanced logging and error handling to aid debugging and ensure robustness during data transformations"))),l.a.createElement("li",null,l.a.createElement("h5",null,"Version 0_48 - 1st December 2024"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("strong",null,"Encryption Support with AES-256 base64")),l.a.createElement("li",null,"Introduced support for Base64-encoded encryption via ",l.a.createElement("code",null,"content-encoding: base64")," and ",l.a.createElement("code",null,"accept-encoding: base64")," headers")))))))};var X=function(){const e=window.location.href.includes("localhost");return l.a.createElement(V.a,{className:"mt-5"},l.a.createElement(S.a,null,l.a.createElement(P.a,null,l.a.createElement("h2",null,"About This Web Application"),l.a.createElement("p",null,"Built using the ",l.a.createElement("a",{href:"https://medium.com/@ksekwamote/how-to-build-a-sern-application-dc358b48defe",target:"_blank",rel:"noopener noreferrer"},"SERN Stack"),". SERN stands for SQL, Express.js, React, and Node.js."))),l.a.createElement(S.a,{className:"mt-4"},l.a.createElement(P.a,null,l.a.createElement("h3",null,"Development Pipeline"),l.a.createElement(d.a,null,l.a.createElement(d.a.Body,null,l.a.createElement(d.a.Text,null,"The development pipeline involves the following steps:",l.a.createElement("ol",null,l.a.createElement("li",null,"Development Environment Until 0_18: Linux ubuntu-like distribution (",l.a.createElement("a",{href:"https://www.bodhilinux.com",target:"_blank",rel:"noopener noreferrer"},"Bodhi"),") running on a virtual machine (VM)."),l.a.createElement("li",null,"Development Environment 0_19 and Beyond: Docker - Node 22 Bookworm"),l.a.createElement("li",null,"Version Control: ",l.a.createElement("a",{href:"https://github.com/MikeForde/mern-azure",target:"_blank",rel:"noopener noreferrer"},"GitHub"),"."),l.a.createElement("li",null,"Continuous Deployment: GitHub Actions, which automates the deployment process to a cloud instance whenever changes are pushed to the ",l.a.createElement("a",{href:"https://github.com/MikeForde/mern-azure",target:"_blank",rel:"noopener noreferrer"},"GitHub Repository"),"."))))))),l.a.createElement(S.a,{className:"mt-4"},l.a.createElement(P.a,null,l.a.createElement("h3",null,"Hosting Options"),l.a.createElement(d.a,null,l.a.createElement(d.a.Body,null,l.a.createElement(d.a.Text,null,e?l.a.createElement(l.a.Fragment,null,"This web application is currently being hosted on a closed network.",l.a.createElement("br",null),"It can be hosted easily on a cloud service, for example OpenShift (incl. D2S), Microsoft Azure etc."):l.a.createElement(l.a.Fragment,null,"This web application is currently being hosted on a cloud service.",l.a.createElement("br",null),"It can be hosted easily on a closed network, and stood-up via standalone Linux, virtual machine (VM), or a container e.g. Docker.")))))),l.a.createElement(S.a,{className:"mt-4"},l.a.createElement(P.a,null,l.a.createElement("h3",null,"Future Development and Experimentation"),l.a.createElement(d.a,null,l.a.createElement(d.a.Body,null,l.a.createElement(d.a.Text,null,"Many features of this prototype web application are designed for demonstration and experimentation. Certain aspects would therefore either not be included or implemented in the same manner in a production-ready version. Feedback and ideas are always welcome."))))))};var Y=function(){const{selectedPatients:e,selectedPatient:t,setSelectedPatient:a}=Object(n.useContext)(C),{startLoading:r,stopLoading:o}=D(),[i,c]=Object(n.useState)(""),[d,u]=Object(n.useState)("ips"),[p,g]=Object(n.useState)("IPS JSON Bundle - /ips/:id or /ipsbyname/:name/:given"),[h,v]=Object(n.useState)(!1),[b,f]=Object(n.useState)(0);Object(n.useEffect)(()=>{if(t){(async()=>{let e;e="ipsbeerwithdelim"===d?`/ipsbeer/${t._id}/pipe`:`/${d}/${t._id}`,console.log("Fetching data from:",e);try{const t=await E.a.get(e);let a;"ipsbasic"===d||"ipsbeer"===d||"ipsbeerwithdelim"===d||"ipshl728"===d?(a=t.data,f(a.length)):"ipsxml"===d?(a=y(t.data),f(a.length)):(f(JSON.stringify(t.data).length),a=JSON.stringify(t.data,null,2)),c(a),console.log("Data:",a),v(!1)}catch(a){console.error("Error fetching IPS record:",a)}finally{o()}})()}},[t,d,o,r]);const y=e=>e.replace(/></g,">\n<");return l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement("h3",null,"API GET - IPS Data: ",b,l.a.createElement("div",{className:"noteFont"},"- /:id can be the IPS id (the main UUID) or the internal database _id")),e.length>0&&t&&l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"dropdown-container"},l.a.createElement(M.a,{id:"dropdown-record",title:`Patient: ${t.patient.given} ${t.patient.name}`,className:"dropdown-button"},e.map(n=>l.a.createElement(G.a.Item,{key:n._id,onClick:()=>(t=>{const n=e.find(e=>e._id===t);r(),a(n)})(n._id),active:t&&t._id===n._id},n.patient.given," ",n.patient.name)))),l.a.createElement("div",{className:"dropdown-container"},l.a.createElement(M.a,{id:"dropdown-mode",title:"API: "+p,onSelect:e=>{switch(r(),u(e),e){case"ips":g("IPS JSON Bundle - /ips/:id or /ipsbyname/:name/:given");break;case"ipsxml":g("IPS XML Bundle - /ipsxml/:id");break;case"ipslegacy":g("IPS Legacy JSON Bundle - /ipslegacy/:id");break;case"ipsraw":g("IPS MongoDB - /ipsmongo/:id");break;case"ipsbasic":g("IPS Minimal - /ipsbasic/:id");break;case"ipsbeer":g("IPS BEER - /ipsbeer/:id");break;case"ipsbeerwithdelim":g("IPS BEER - /ipsbeer/:id/pipe)");break;case"ipshl728":g("IPS HL7 2.8 - /ipshl728/:id");break;default:g("IPS JSON Bundle - /ips/:id")}},className:"dropdown-button"},l.a.createElement(G.a.Item,{eventKey:"ips"},"IPS JSON Bundle - /ips/:id or /ipsbyname/:name/:given"),l.a.createElement(G.a.Item,{eventKey:"ipsxml"},"IPS XML Bundle - /ipsxml/:id"),l.a.createElement(G.a.Item,{eventKey:"ipslegacy"},"IPS Legacy JSON Bundle - /ipslegacy/:id"),l.a.createElement(G.a.Item,{eventKey:"ipsmongo"},"IPS MongoDB - /ipsmongo/:id"),l.a.createElement(G.a.Item,{eventKey:"ipsbasic"},"IPS Minimal - /ipsbasic/:id"),l.a.createElement(G.a.Item,{eventKey:"ipsbeer"},"IPS BEER - /ipsbeer/:id"),l.a.createElement(G.a.Item,{eventKey:"ipsbeerwithdelim"},"IPS BEER - /ipsbeer/:id/pipe"),l.a.createElement(G.a.Item,{eventKey:"ipshl728"},"IPS HL7 2.8 - /ipshl728/:id")))),h?l.a.createElement(U.a,{variant:"danger"},"Data is too large to display. Please try a different mode."):l.a.createElement("div",{className:"text-area"},l.a.createElement(m.a.Control,{as:"textarea",rows:10,value:i,readOnly:!0})),l.a.createElement("br",null),l.a.createElement("div",{className:"button-container"},l.a.createElement(s.a,{className:"mb-3",onClick:()=>{const e=new Blob([i],{type:"text/plain"}),t=window.URL.createObjectURL(e),a=document.createElement("a");a.href=t,a.setAttribute("download","ips_data.txt"),document.body.appendChild(a),a.click(),document.body.removeChild(a)}},"Download Data"),"ips"===d&&l.a.createElement(s.a,{variant:"primary",className:"mb-3",onClick:()=>window.open("https://ipsviewer.com","_blank")},"Open IPS Viewer"))))};var Z=()=>{const[e,t]=Object(n.useState)(""),[a,r]=Object(n.useState)(""),[o,i]=Object(n.useState)(null),[c,d]=Object(n.useState)(null),[u,p]=Object(n.useState)(""),{startLoading:g,stopLoading:h}=D();return l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement("h3",null,"VitalsIQ API - GET (Pull)"),l.a.createElement(m.a,{onSubmit:async t=>{t.preventDefault(),g();try{const t=await E.a.get(`/fetchipsora/${e}/${a}`);i(t.data),d(null)}catch(n){d("Failed to fetch IPS data"),i(null)}finally{h()}}},l.a.createElement(m.a.Group,{controlId:"name"},l.a.createElement(m.a.Control,{type:"text",placeholder:"Family/Surname",value:e,onChange:e=>t(e.target.value),required:!0})),l.a.createElement(m.a.Group,{controlId:"givenName"},l.a.createElement(m.a.Control,{type:"text",placeholder:"First/Given Name",value:a,onChange:e=>r(e.target.value),required:!0})),l.a.createElement(s.a,{variant:"primary",type:"submit",className:"mb-3"},"Submit GET Request")),c&&l.a.createElement("p",{style:{color:"red"}},c),o&&l.a.createElement("div",null,l.a.createElement("h4",null,"IPS Data"),l.a.createElement("div",{className:"text-area"},l.a.createElement(m.a.Control,{as:"textarea",rows:10,value:JSON.stringify(o,null,2),readOnly:!0})),l.a.createElement(s.a,{variant:"success",onClick:async()=>{try{await E.a.post("/ipsbundle",o),p("IPS record successfully transformed and saved to database"),d(null)}catch(e){p(e.message),d("Failed to transform IPS record")}}},"Transform to IPS MERN Record")),u&&l.a.createElement("p",{style:{color:"green"}},u)))};var ee=function(){const{selectedPatients:e,selectedPatient:t,setSelectedPatient:a}=Object(n.useContext)(C),[r,o]=Object(n.useState)(""),[i,c]=Object(n.useState)(!1),[d,u]=Object(n.useState)(""),{startLoading:p,stopLoading:g}=D();return Object(n.useEffect)(()=>{if(t){const e="/ips/"+t._id;E.a.get(e).then(e=>{const t=JSON.stringify(e.data,null,2);o(t),console.log("Data:",t),c(!1)}).catch(e=>{console.error("Error fetching IPS record:",e)}).finally(()=>{g()})}},[t,g]),l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement("h3",null,"VitalsIQ API Page - POST (Push)"),e.length>0&&t&&l.a.createElement("div",{className:"dropdown-container"},l.a.createElement(M.a,{id:"dropdown-record",title:`Patient: ${t.patient.given} ${t.patient.name}`,className:"dropdown-button"},e.map(n=>l.a.createElement(G.a.Item,{key:n._id,onClick:()=>(t=>{const n=e.find(e=>e._id===t);p(),a(n)})(n._id),active:t&&t._id===n._id},n.patient.given," ",n.patient.name)))),i?l.a.createElement(U.a,{variant:"danger"},"Error pushing IPS data. Please try again."):l.a.createElement("div",{className:"text-area"},l.a.createElement(m.a.Control,{as:"textarea",rows:10,value:r,readOnly:!0})),l.a.createElement("br",null),d&&l.a.createElement(U.a,{variant:"success"},d),l.a.createElement("div",{className:"button-container"},t&&r&&l.a.createElement(s.a,{className:"submit",variant:"danger",onClick:async()=>{p();try{const e=JSON.parse(r);await E.a.post("/pushipsora",e),u("IPS data successfully pushed to the external server"),c(!1)}catch(e){console.error("Error pushing IPS data:",e),c(!0)}finally{g()}}},"Push IPS JSON Data to VitalsIQ WebApp"))))};var te=function(){const{selectedPatients:e,selectedPatient:t,setSelectedPatient:a}=Object(n.useContext)(C),[r,o]=Object(n.useState)(""),[i,c]=Object(n.useState)(!1),[d,u]=Object(n.useState)(""),{startLoading:p,stopLoading:g}=D();return Object(n.useEffect)(()=>{if(t){const e="/ipslegacy/"+t._id;E.a.get(e).then(e=>{const t=JSON.stringify(e.data,null,2);o('{\n "hl7" :\n '+t+" \n}"),console.log("Data:",t),c(!1)}).catch(e=>{console.error("Error fetching IPS record:",e)}).finally(()=>{g()})}},[t,g]),l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement("h3",null,"NLD API Page - POST (Push)"),e.length>0&&t&&l.a.createElement("div",{className:"dropdown-container"},l.a.createElement(M.a,{id:"dropdown-record",title:`Patient: ${t.patient.given} ${t.patient.name}`,className:"dropdown-button"},e.map(n=>l.a.createElement(G.a.Item,{key:n._id,onClick:()=>(t=>{const n=e.find(e=>e._id===t);p(),a(n)})(n._id),active:t&&t._id===n._id},n.patient.given," ",n.patient.name)))),i?l.a.createElement(U.a,{variant:"danger"},"Error pushing IPS data. Please try again."):l.a.createElement("div",{className:"text-area"},l.a.createElement(m.a.Control,{as:"textarea",rows:10,value:r,readOnly:!0})),l.a.createElement("br",null),d&&l.a.createElement(U.a,{variant:"success"},d),l.a.createElement("div",{className:"button-container"},t&&r&&l.a.createElement(s.a,{className:"submit",variant:"danger",onClick:async()=>{p();try{const e=JSON.parse(r);await E.a.post("/pushipsnld",e),u("IPS data successfully pushed to the external server"),c(!1)}catch(e){console.error("Error pushing IPS data:",e),c(!0)}finally{g()}}},"Push IPS JSON Data to NLD WebApp"))))};var ae=function(){const{selectedPatients:e,selectedPatient:t,setSelectedPatient:a}=Object(n.useContext)(C),[r,o]=Object(n.useState)(""),[i,c]=Object(n.useState)(""),[d,u]=Object(n.useState)(!1),[p,g]=Object(n.useState)(""),{startLoading:h,stopLoading:v}=D(),b=Object(n.useRef)(!1),[f,y]=Object(n.useState)(0),[S,P]=Object(n.useState)(0),[I,N]=Object(n.useState)("IPS JSON"),[w,O]=Object(n.useState)("IPS JSON");return Object(n.useEffect)(()=>{if(t&&!b.current){const e="/ips/"+t._id;E.a.get(e).then(e=>{const t=(new TextEncoder).encode(JSON.stringify(e.data)).length,a=JSON.stringify(e.data,null,2);o(a),u(!1),y(t),O("IPS JSON"),g(""),c(""),P(0)}).catch(e=>{console.error("Error fetching IPS record:",e),g("Error fetching IPS record"),u(!0)}).finally(()=>{v()})}},[t,v]),l.a.createElement("div",{className:"app"},l.a.createElement("div",{className:"container"},l.a.createElement("h3",null,"BEER ",l.a.createElement("div",{className:"noteFont"},"(Basic Emergency Exchange Record)")),e.length>0&&t&&l.a.createElement("div",{className:"dropdown-container"},l.a.createElement(M.a,{id:"dropdown-record",title:`Patient: ${t.patient.given} ${t.patient.name}`,className:"dropdown-button"},e.map(n=>l.a.createElement(G.a.Item,{key:n._id,onClick:()=>(t=>{const n=e.find(e=>e._id===t);b.current=!1,h(),a(n)})(n._id),active:t&&t._id===n._id},n.patient.given," ",n.patient.name)))),d&&!p&&l.a.createElement(U.a,{variant:"danger"},"Error processing data. Please try again."),l.a.createElement("div",{className:"text-area-container"},l.a.createElement("div",{className:"text-area"},l.a.createElement("h5",null,`Format: ${w} - ${f} bytes`),l.a.createElement(m.a.Control,{as:"textarea",rows:10,value:r,onChange:e=>o(e.target.value)}),l.a.createElement(s.a,{className:"mt-3",variant:"secondary",onClick:"MongoDB"===I?async()=>{if(""!==r&&"{}"!==r){console.log("mongoData:",r),b.current=!0,h();try{const e=await E.a.post("/convertmongo2beer",{data:r});c(e.data);const t=(new TextEncoder).encode(e.data.trim()).length;P(t),g("Successfully converted to BEER format"),u(!1)}catch(e){console.error("Error converting to BEER format from MongoDB:",e),g("Error converting to BEER format from MongoDB"),u(!0)}finally{v()}}}:()=>{if(""===r||"{}"===r)return;b.current=!0,h();E.a.post("/convertips2beer",{data:r}).then(e=>{c(e.data);const t=(new TextEncoder).encode(e.data.trim()).length;P(t),g("Successfully converted to BEER format"),u(!1)}).catch(e=>{console.error("Error converting to BEER format from IPS JSON:",e),g("Error converting to BEER format from IPS JSON"),u(!0)}).finally(()=>{v()})}},"Convert to BEER Format")),l.a.createElement("div",{className:"text-area"},l.a.createElement("h5",null,"BEER Format - ",S," bytes"),l.a.createElement(m.a.Control,{as:"textarea",rows:10,value:i,onChange:e=>c(e.target.value)}),l.a.createElement(M.a,{id:"dropdown-format",title:"Conversion Mode: "+I,onSelect:e=>{N(e),O(e)},className:"mt-3"},l.a.createElement(G.a.Item,{eventKey:"MongoDB"},"MongoDB"),l.a.createElement(G.a.Item,{eventKey:"IPS JSON"},"IPS JSON")),l.a.createElement(s.a,{className:"mt-3",variant:"secondary",onClick:"MongoDB"===I?async()=>{if(""!==i&&"{}"!==i){h(),b.current=!0;try{const e=await E.a.post("/convertbeer2mongo",{data:i});o(JSON.stringify(e.data,null,2));const t=(new TextEncoder).encode(JSON.stringify(e.data)).length;y(t);const a=(new TextEncoder).encode(i.trim()).length;P(a),g("Successfully converted to MongoDB format"),O("MongoDB"),u(!1)}catch(e){console.error("Error converting to MongoDB format:",e),g("Error converting to MongoDB format"),u(!0)}finally{v()}}}:async()=>{if(""!==i&&"{}"!==i){h(),b.current=!0;try{const e=await E.a.post("/convertbeer2ips",{data:i});o(JSON.stringify(e.data,null,2));const t=(new TextEncoder).encode(JSON.stringify(e.data)).length;y(t);const a=(new TextEncoder).encode(i.trim()).length;P(a),g("Successfully converted to IPS JSON format"),O("IPS JSON"),u(!1)}catch(e){console.error("Error converting to IPS JSON format:",e),g("Error converting to IPS JSON format"),u(!0)}finally{v()}}}},"Convert to ",I," Format"))),l.a.createElement("div",null,p&&l.a.createElement(U.a,{variant:d?"danger":"success",className:"message"},p))))},ne=a(364);var le=function(){const e=[{feature:"Gzip Compression",incoming:l.a.createElement(l.a.Fragment,null,"- Include the header ",l.a.createElement("code",null,"Content-Encoding: gzip")," for incoming requests.",l.a.createElement("br",null),"- Compress your payload using gzip before sending."),outgoing:l.a.createElement(l.a.Fragment,null,"- Include the header ",l.a.createElement("code",null,"Accept-Encoding: gzip")," for responses.",l.a.createElement("br",null),"- The response will be returned in gzip format if supported.")},{feature:"AES-256 Encryption",incoming:l.a.createElement(l.a.Fragment,null,"- Include the header ",l.a.createElement("code",null,"X-Encrypted: true")," for incoming requests.",l.a.createElement("br",null),"- Encrypt your payload using AES-256 before sending.",l.a.createElement("br",null),"- Default format for the encrypted payload and IV is ",l.a.createElement("code",null,"hex"),".",l.a.createElement("br",null),"- To send in Base64 format, include the header ",l.a.createElement("code",null,"Content-Encoding: base64"),". Ensure both ",l.a.createElement("code",null,"encryptedData")," and ",l.a.createElement("code",null,"iv")," are Base64-encoded."),outgoing:l.a.createElement(l.a.Fragment,null,"- Include the header ",l.a.createElement("code",null,"Accept-Encryption: aes256")," for responses.",l.a.createElement("br",null),"- The response will be encrypted using AES-256 if supported.",l.a.createElement("br",null),"- Default format for the encrypted payload and IV is ",l.a.createElement("code",null,"hex"),".",l.a.createElement("br",null),"- To receive in Base64 format, include the header ",l.a.createElement("code",null,"Accept-Encoding: base64"),".")},{feature:"Combined (AES-256 + Gzip)",incoming:l.a.createElement(l.a.Fragment,null,"- Use both ",l.a.createElement("code",null,"Content-Encoding: gzip")," and ",l.a.createElement("code",null,"X-Encrypted: true"),".",l.a.createElement("br",null),"- Compress your payload with gzip first, then encrypt with AES-256.",l.a.createElement("br",null),"- To send in Base64 format, include ",l.a.createElement("code",null,"Content-Encoding: gzip, base64"),"."),outgoing:l.a.createElement(l.a.Fragment,null,"- Use both ",l.a.createElement("code",null,"Accept-Encoding: gzip")," and ",l.a.createElement("code",null,"Accept-Encryption: aes256"),".",l.a.createElement("br",null),"- The response will first be compressed with gzip, then encrypted with AES-256.",l.a.createElement("br",null),"- To receive in Base64 format, include ",l.a.createElement("code",null,"Accept-Encoding: gzip, base64"),".")}];return l.a.createElement(V.a,{className:"mt-5"},l.a.createElement("h2",null,"API Documentation"),l.a.createElement(ne.a,{striped:!0,bordered:!0,hover:!0,responsive:!0},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Method"),l.a.createElement("th",null,"Endpoint"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Request"),l.a.createElement("th",null,"Response"))),l.a.createElement("tbody",null,[{method:"POST",endpoint:"/ips",description:"Create a new IPS record.",request:"MongoDb JSON object representing the new IPS record.",response:"MongoDb JSON object of the created IPS record."},{method:"POST",endpoint:"/ipsmany",description:"Create multiple IPS records.",request:"Array of MongoDb JSON objects representing the new IPS records",response:"Array of MongoDb JSON objects of the created IPS records."},{method:"POST",endpoint:"/ipsbundle",description:"Create IPS records from an IPS Bundle.",request:"IPS Bundle - JSON",response:"MongoDb - JSON as confirmation of record creation."},{method:"POST",endpoint:"/pushipsora",description:"Push IPS data to an external ORA system.",request:"IPS Bundle - JSON",response:"Response from the ORA system."},{method:"POST",endpoint:"/pushipsnld",description:"Push IPS data to an external NLD system.",request:"IPS Bundle - JSON",response:"Response from the NLD system."},{method:"POST",endpoint:"/ipsfrombeer",description:"Create MongoDb IPS records from BEER format.",request:"BEER - Plain Text",response:"MongoDb - JSON as confirmation of record creation."},{method:"POST",endpoint:"/ipsfromcda",description:"Create MongoDb IPS records from CDA XML format.",request:"CDA - XML",response:"MongoDb - JSON as confirmation of record creation."},{method:"POST",endpoint:"/convertmongo2beer",description:"Convert MongoDB format to BEER format.",request:"MongoDB - JSON",response:"BEER - Plain Text"},{method:"POST",endpoint:"/convertmongo2hl7",description:"Convert MongoDB format to HL7 2.8 format.",request:"MongoDB - JSON",response:"HL7 2.8 - Plain Text"},{method:"POST",endpoint:"/convertbeer2mongo",description:"Convert BEER format to MongoDB format.",request:"BEER - Plain Text",response:"MongoDB - JSON"},{method:"POST",endpoint:"/convertbeer2ips",description:"Convert BEER format to IPS JSON format.",request:"BEER - Plain Text",response:"IPS Bundle - JSON"},{method:"POST",endpoint:"/convertips2beer",description:"Convert IPS JSON format to BEER format.",request:"IPS Bundle - JSON",response:"BEER - Plain Text"},{method:"POST",endpoint:"/convertcdatoips",description:"Convert CDA XML format to IPS JSON format.",request:"CDA - XML",response:"IPS Bundle - JSON"},{method:"POST",endpoint:"/convertcdatobeer",description:"Convert CDA XML format to BEER format.",request:"CDA - XML",response:"BEER - Plain Text"},{method:"POST",endpoint:"/converthl728tomongo",description:"Convert HL7 2.8 format to MongoDB format.",request:"HL7 2.8 - Plain Text",response:"MongoDB - JSON"},{method:"POST",endpoint:"/converthl728toips",description:"Convert HL7 2.8 format to IPS JSON format.",request:"HL7 2.8 - Plain Text",response:"IPS Bundle - JSON"},{method:"GET",endpoint:"/ips/all",description:"Retrieve all IPS records.",request:"None.",response:"Array of JSON objects representing IPS records."},{method:"GET",endpoint:"/ipsraw/:id",description:"Retrieve raw IPS record by ID.",request:"IPS record ID as URL parameter.",response:"JSON object of the raw IPS record."},{method:"GET",endpoint:"/ipsmongo/:id",description:"Retrieve IPS record in MongoDB format by ID.",request:"IPS record ID as URL parameter.",response:"MongoDB - JSON"},{method:"GET",endpoint:"/ips/:id",description:"Retrieve IPS record in default format by ID.",request:"IPS record ID as URL parameter.",response:"IPS record - JSON"},{method:"GET",endpoint:"/ipsbasic/:id",description:"Retrieve IPS record in basic format by ID.",request:"IPS record ID as URL parameter.",response:"Basic format - Plain Text"},{method:"GET",endpoint:"/ipsbeer/:id/:delim?",description:"Retrieve IPS record in BEER format by ID with optional delimiter.",request:"IPS record ID and optional delimiter as URL parameters.",response:"BEER - Plain Text"},{method:"GET",endpoint:"/ipshl728/:id",description:"Retrieve IPS record in HL7 2.8 format by ID.",request:"IPS record ID as URL parameter.",response:"HL7 2.8 - Plain Text"},{method:"GET",endpoint:"/ipsxml/:id",description:"Retrieve IPS record in XML format by ID.",request:"IPS record ID as URL parameter.",response:"IPS Bundle - XML"},{method:"GET",endpoint:"/ipslegacy/:id",description:"Retrieve IPS record in legacy format by ID.",request:"IPS record ID as URL parameter.",response:"Legacy format of the IPS record - JSON"},{method:"GET",endpoint:"/ipsbyname/:name/:given",description:"Retrieve IPS record by patient name and given name. Case insensitive.",request:"Patient name and given name as URL parameters.",response:"IPS Bundle - JSON"},{method:"GET",endpoint:"/ips/search/:name",description:"Search IPS records by patient name.",request:"Patient name as URL parameter.",response:"Array of JSON objects representing IPS records."},{method:"GET",endpoint:"/fetchipsora/:name/:givenName",description:"Fetch IPS data from ORA by patient name and given name.",request:"Patient name and given name as URL parameters.",response:"JSON object from ORA system."},{method:"PUT",endpoint:"/ips/:id",description:"Update an IPS record by ID.",request:"Partial JSON object representing the updated IPS record.",response:"MongoDB object of the updated IPS record - JSON"},{method:"PUT",endpoint:"/ipsuuid/:uuid",description:"Update an IPS record by UUID.",request:"Partial JSON object representing the updated IPS record.",response:"MongoDB object of the updated IPS record - JSON"},{method:"DELETE",endpoint:"/ips/:id",description:"Delete an IPS record by ID.",request:"IPS record ID as URL parameter.",response:"Confirmation of deletion."}].map((e,t)=>l.a.createElement("tr",{key:t},l.a.createElement("td",null,e.method),l.a.createElement("td",null,e.endpoint),l.a.createElement("td",null,e.description),l.a.createElement("td",null,e.request),l.a.createElement("td",null,e.response))))),l.a.createElement("h3",{className:"mt-5"},"Encoding and Encryption Usage"),l.a.createElement(ne.a,{striped:!0,bordered:!0,hover:!0,responsive:!0},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Feature"),l.a.createElement("th",null,"Instructions for Incoming Requests"),l.a.createElement("th",null,"Instructions for Outgoing Responses"))),l.a.createElement("tbody",null,e.map((e,t)=>l.a.createElement("tr",{key:t},l.a.createElement("td",null,e.feature),l.a.createElement("td",null,e.incoming),l.a.createElement("td",null,e.outgoing))))))};a(355);var re=()=>{const{isLoading:e}=D();return e?l.a.createElement("div",{className:"loading-spinner-overlay"},l.a.createElement("div",{className:"spinner-border text-primary",role:"status"},l.a.createElement("span",{className:"sr-only"},"Loading..."))):null};var oe=function(){return l.a.createElement(w,null,l.a.createElement(A,null,l.a.createElement(i.a,null,l.a.createElement("div",{style:{paddingTop:"56px"}}," ",l.a.createElement(K,null),l.a.createElement(re,null),l.a.createElement(c.c,null,l.a.createElement(c.a,{path:"/",element:l.a.createElement(x,null)}),l.a.createElement(c.a,{path:"/qr/:id?",element:l.a.createElement(j,null)}),l.a.createElement(c.a,{path:"/bulkupload",element:l.a.createElement(J,null)}),l.a.createElement(c.a,{path:"/about",element:l.a.createElement(z,null)}),l.a.createElement(c.a,{path:"/changelog",element:l.a.createElement(W,null)}),l.a.createElement(c.a,{path:"/aboutwebapp",element:l.a.createElement(X,null)}),l.a.createElement(c.a,{path:"/api/:id?",element:l.a.createElement(Y,null)}),l.a.createElement(c.a,{path:"/ipsoffroad",element:l.a.createElement(Z,null)}),l.a.createElement(c.a,{path:"/offroadpost/:id?",element:l.a.createElement(ee,null)}),l.a.createElement(c.a,{path:"/beergarden/:id?",element:l.a.createElement(ae,null)}),l.a.createElement(c.a,{path:"/apidocumentation",element:l.a.createElement(le,null)}),l.a.createElement(c.a,{path:"/pushipsnld",element:l.a.createElement(te,null)}))))))};o.a.render(l.a.createElement(w,null,l.a.createElement(oe,null)),document.getElementById("root"))},59:function(e,t,a){}},[[224,1,2]]]);
//# sourceMappingURL=main.26512eca.chunk.js.map